Traceback (most recent call last):
  File "/Users/hongtaoh/anaconda3/envs/bayes/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/hongtaoh/anaconda3/envs/bayes/lib/python3.8/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/hongtaoh/anaconda3/envs/bayes/lib/python3.8/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/hongtaoh/anaconda3/envs/bayes/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/hongtaoh/anaconda3/envs/bayes/lib/python3.8/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/hongtaoh/anaconda3/envs/bayes/lib/python3.8/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/hongtaoh/anaconda3/envs/bayes/lib/python3.8/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# empty list of dictionaries to store the estimates from pymc
means_vars_estimate_dict_list = []
biomarkers = [_ for _ in range(10)]
for biomarker in biomarkers: 
    dic = {'biomarker': biomarker}  # Initialize dictionary outside the inner loop
    for i in ['healthy', 'diseased']:
        data_full = observed_data[(observed_data.Biomarker == f"Biomarker {biomarker}") & (
        observed_data.drawn_from == i)]
        data = data_full.measurement
        mu_estimate, var_estimate = estimate_params_exact(
            m0 = 0, n0 = 1, s0_sq = 1, v0 = 1, data=data)
        if i == 'diseased':
            dic['theta_mean'] = mu_estimate
            dic['theta_var'] = var_estimate
        else:
            dic['phi_mean'] = mu_estimate
            dic['phi_var'] = var_estimate
    print(f"biomarker {biomarker} done!")
    means_vars_estimate_dict_list.append(dic)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[4], line 10[0m
[1;32m      7[0m data_full [38;5;241m=[39m observed_data[(observed_data[38;5;241m.[39mBiomarker [38;5;241m==[39m [38;5;124mf[39m[38;5;124m"[39m[38;5;124mBiomarker [39m[38;5;132;01m{[39;00mbiomarker[38;5;132;01m}[39;00m[38;5;124m"[39m) [38;5;241m&[39m (
[1;32m      8[0m observed_data[38;5;241m.[39mdrawn_from [38;5;241m==[39m i)]
[1;32m      9[0m data [38;5;241m=[39m data_full[38;5;241m.[39mmeasurement
[0;32m---> 10[0m mu_estimate, var_estimate [38;5;241m=[39m [43mestimate_params_exact[49m[43m([49m
[1;32m     11[0m [43m    [49m[43mm0[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[38;5;241;43m0[39;49m[43m,[49m[43m [49m[43mn0[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[38;5;241;43m1[39;49m[43m,[49m[43m [49m[43ms0_sq[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[38;5;241;43m1[39;49m[43m,[49m[43m [49m[43mv0[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[38;5;241;43m1[39;49m[43m,[49m[43m [49m[43mdata[49m[38;5;241;43m=[39;49m[43mdata[49m[43m)[49m
[1;32m     12[0m [38;5;28;01mif[39;00m i [38;5;241m==[39m [38;5;124m'[39m[38;5;124mdiseased[39m[38;5;124m'[39m:
[1;32m     13[0m     dic[[38;5;124m'[39m[38;5;124mtheta_mean[39m[38;5;124m'[39m] [38;5;241m=[39m mu_estimate

Cell [0;32mIn[2], line 14[0m, in [0;36mestimate_params_exact[0;34m(m0, n0, s0_sq, v0, data)[0m
[1;32m     12[0m updated_n0 [38;5;241m=[39m n0 [38;5;241m+[39m sample_size
[1;32m     13[0m updated_v0 [38;5;241m=[39m v0 [38;5;241m+[39m sample_size 
[0;32m---> 14[0m updated_s0_sq [38;5;241m=[39m ([43msample_var[49m[38;5;241;43m*[39;49m[43m([49m[43msample_size[49m[38;5;241;43m-[39;49m[38;5;241;43m1[39;49m[43m)[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[43ms0_sq[49m[38;5;241;43m*[39;49m[43mv0[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[43mn0[49m[38;5;241;43m*[39;49m[43msample_size[49m[38;5;241;43m*[39;49m[43m([49m[43msample_mean[49m[38;5;241;43m-[39;49m[43mm0[49m[43m)[49m[38;5;241;43m^[39;49m[38;5;241;43m2[39;49m[38;5;241;43m/[39;49m[43mupdated_n0[49m)[38;5;241m/[39mupdated_v0
[1;32m     15[0m updated_alpha [38;5;241m=[39m updated_v0[38;5;241m/[39m[38;5;241m2[39m
[1;32m     16[0m updated_beta [38;5;241m=[39m updated_v0[38;5;241m*[39mupdated_s0_sq[38;5;241m/[39m[38;5;241m2[39m

[0;31mTypeError[0m: ufunc 'bitwise_xor' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

